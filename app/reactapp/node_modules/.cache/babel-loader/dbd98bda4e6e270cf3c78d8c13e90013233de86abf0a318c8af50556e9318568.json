{"ast":null,"code":"/*\n * sqlite.js\n *\n * Created by Andrzej Porebski on 10/29/15.\n * Copyright (c) 2015-16 Andrzej Porebski.\n *\n * This library is available under the terms of the MIT License (2008).\n * See http://opensource.org/licenses/alphabetical for full text.\n */\nvar plugin = require('./lib/sqlite.core.js');\nvar {\n  SQLiteFactory\n} = plugin;\nvar config = [\n// meaning: [returnValueExpected,prototype,fn,argsNeedPadding,reverseCallbacks,rejectOnError]\n\n[false, \"SQLitePlugin\", \"transaction\", false, true, true], [false, \"SQLitePlugin\", \"readTransaction\", false, true, true], [false, \"SQLitePlugin\", \"close\", false, false, true], [false, \"SQLitePlugin\", \"executeSql\", true, false, true], [false, \"SQLitePlugin\", \"sqlBatch\", false, false, true], [false, \"SQLitePlugin\", \"attach\", true, false, true], [false, \"SQLitePlugin\", \"detach\", false, false, true], [false, \"SQLitePluginTransaction\", \"executeSql\", true, false, false], [false, \"SQLiteFactory\", \"deleteDatabase\", false, false, true], [true, \"SQLiteFactory\", \"openDatabase\", false, false, true], [false, \"SQLiteFactory\", \"echoTest\", false, false, true]];\nvar originalFns = {};\nconfig.forEach(entry => {\n  let [returnValueExpected, prototype, fn] = entry;\n  let originalFn = plugin[prototype].prototype[fn];\n  originalFns[prototype + \".\" + fn] = originalFn;\n});\nfunction enablePromiseRuntime(enable) {\n  if (enable) {\n    createPromiseRuntime();\n  } else {\n    createCallbackRuntime();\n  }\n}\nfunction createCallbackRuntime() {\n  config.forEach(entry => {\n    let [returnValueExpected, prototype, fn, argsNeedPadding, reverseCallbacks, rejectOnError] = entry;\n    plugin[prototype].prototype[fn] = originalFns[prototype + \".\" + fn];\n  });\n  plugin.log(\"Callback based runtime ready\");\n}\nfunction createPromiseRuntime() {\n  config.forEach(entry => {\n    let [returnValueExpected, prototype, fn, argsNeedPadding, reverseCallbacks, rejectOnError] = entry;\n    let originalFn = plugin[prototype].prototype[fn];\n    plugin[prototype].prototype[fn] = function (...args) {\n      if (argsNeedPadding && args.length == 1) {\n        args.push([]);\n      }\n      var promise = new Promise((resolve, reject) => {\n        let success = function (...args) {\n          if (!returnValueExpected) {\n            return resolve(args);\n          }\n        };\n        let error = function (err) {\n          plugin.log('error: ', fn, ...args, arguments);\n          if (rejectOnError) {\n            reject(err);\n          }\n          return false;\n        };\n        var retValue = originalFn.call(this, ...args, reverseCallbacks ? error : success, reverseCallbacks ? success : error);\n        if (returnValueExpected) {\n          return resolve(retValue);\n        }\n      });\n      return promise;\n    };\n  });\n  plugin.log(\"Promise based runtime ready\");\n}\nSQLiteFactory.prototype.enablePromise = enablePromiseRuntime;\nmodule.exports = new SQLiteFactory();","map":{"version":3,"names":["plugin","require","SQLiteFactory","config","originalFns","forEach","entry","returnValueExpected","prototype","fn","originalFn","enablePromiseRuntime","enable","createPromiseRuntime","createCallbackRuntime","argsNeedPadding","reverseCallbacks","rejectOnError","log","args","length","push","promise","Promise","resolve","reject","success","error","err","arguments","retValue","call","enablePromise","module","exports"],"sources":["C:/Users/Miguel Corral/node_modules/react-native-sqlite-storage/sqlite.js"],"sourcesContent":["/*\n * sqlite.js\n *\n * Created by Andrzej Porebski on 10/29/15.\n * Copyright (c) 2015-16 Andrzej Porebski.\n *\n * This library is available under the terms of the MIT License (2008).\n * See http://opensource.org/licenses/alphabetical for full text.\n */\nvar plugin = require('./lib/sqlite.core.js');\nvar {SQLiteFactory} = plugin;\n\nvar config = [\n\n  // meaning: [returnValueExpected,prototype,fn,argsNeedPadding,reverseCallbacks,rejectOnError]\n\n  [false,\"SQLitePlugin\",\"transaction\",false,true,true],\n  [false,\"SQLitePlugin\",\"readTransaction\",false,true,true],\n  [false,\"SQLitePlugin\",\"close\",false,false,true],\n  [false,\"SQLitePlugin\",\"executeSql\",true,false,true],\n  [false,\"SQLitePlugin\",\"sqlBatch\",false,false,true],\n  [false,\"SQLitePlugin\",\"attach\",true,false,true],\n  [false,\"SQLitePlugin\",\"detach\",false,false,true],\n  [false,\"SQLitePluginTransaction\",\"executeSql\",true,false,false],\n  [false,\"SQLiteFactory\",\"deleteDatabase\",false,false,true],\n  [true, \"SQLiteFactory\",\"openDatabase\",false,false,true],\n  [false,\"SQLiteFactory\",\"echoTest\",false,false,true]\n];\n\nvar originalFns = {};\nconfig.forEach(entry => {\n  let [returnValueExpected,prototype,fn]= entry;\n  let originalFn = plugin[prototype].prototype[fn];\n  originalFns[prototype + \".\" + fn] = originalFn;\n});\n\nfunction enablePromiseRuntime(enable){\n  if (enable){\n    createPromiseRuntime();\n  } else {\n    createCallbackRuntime();\n  }\n}\nfunction createCallbackRuntime() {\n  config.forEach(entry => {\n    let [returnValueExpected,prototype,fn,argsNeedPadding,reverseCallbacks,rejectOnError]= entry;\n    plugin[prototype].prototype[fn] = originalFns[prototype + \".\" + fn];\n  });\n  plugin.log(\"Callback based runtime ready\");\n}\nfunction createPromiseRuntime() {\n  config.forEach(entry => {\n    let [returnValueExpected,prototype,fn,argsNeedPadding,reverseCallbacks,rejectOnError]= entry;\n    let originalFn = plugin[prototype].prototype[fn];\n    plugin[prototype].prototype[fn] = function(...args){\n      if (argsNeedPadding && args.length == 1){\n        args.push([]);\n      }\n      var promise = new Promise((resolve,reject) => {\n        let success = function(...args){\n          if (!returnValueExpected) {\n           return resolve(args);\n          }\n        };\n        let error = function(err){\n          plugin.log('error: ',fn,...args,arguments);\n          if (rejectOnError) {\n            reject(err);\n          }\n          return false;\n        };\n        var retValue = originalFn.call(this,...args,reverseCallbacks ? error : success, reverseCallbacks ? success : error);\n        if (returnValueExpected){\n          return resolve(retValue);\n        }\n      });\n\n      return promise;\n    }\n  });\n  plugin.log(\"Promise based runtime ready\");\n}\nSQLiteFactory.prototype.enablePromise = enablePromiseRuntime;\n\nmodule.exports = new SQLiteFactory();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}